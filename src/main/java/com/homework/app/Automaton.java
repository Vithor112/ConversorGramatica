package com.homework.app;

import com.homework.app.TableModels.TransictionModel;
import com.homework.app.structs.FSA.Alphabet;
import com.homework.app.structs.FSA.FSA;
import com.homework.app.structs.FSA.State;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.util.stream.Collectors;

public class Automaton extends JFrame {
    private JTable TransactionJTable;
    private JLabel AFDNameLabel;
    private JLabel StatesJLabel;
    private JLabel SymbolsJLabel;
    private JLabel FinalStatesJLabel;
    private JLabel InitialStatesJLabel;
    private JPanel PanelContent;

    FSA fsa;

    public Automaton(FSA fsa) {
        this.fsa = fsa;
        setSize(500, 500);

        setContentPane(PanelContent);
        setLocationRelativeTo(null);
        setVisible(true);

        fillLabels();
        TransictionModel transictionModel = new TransictionModel(fsa, Alphabet.getSymbolsAllowed());
        TransactionJTable.setModel(transictionModel);
    }


    private void fillLabels() {
        AFDNameLabel.setText(fsa.getName());
        StatesJLabel.setText(fsa.getStates().values().stream().map(State::getLabel).collect(Collectors.joining(",")));
        FinalStatesJLabel.setText(fsa.getFinalState().getLabel());
        InitialStatesJLabel.setText(fsa.getInitialState().getLabel());
        SymbolsJLabel.setText(Alphabet.getSymbolsAllowed().stream().map(Object::toString).collect(Collectors.joining(",")));
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        PanelContent = new JPanel();
        PanelContent.setLayout(new GridLayoutManager(11, 4, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("States");
        PanelContent.add(label1, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        StatesJLabel = new JLabel();
        StatesJLabel.setText("");
        PanelContent.add(StatesJLabel, new GridConstraints(3, 2, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Symbols");
        PanelContent.add(label2, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        SymbolsJLabel = new JLabel();
        SymbolsJLabel.setText("");
        PanelContent.add(SymbolsJLabel, new GridConstraints(4, 2, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        AFDNameLabel = new JLabel();
        AFDNameLabel.setText("");
        PanelContent.add(AFDNameLabel, new GridConstraints(1, 1, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Prods");
        PanelContent.add(label3, new GridConstraints(8, 1, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        TransactionJTable = new JTable();
        PanelContent.add(TransactionJTable, new GridConstraints(10, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("FinalStates");
        PanelContent.add(label4, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label5 = new JLabel();
        label5.setText("InitialStates");
        PanelContent.add(label5, new GridConstraints(7, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        PanelContent.add(spacer1, new GridConstraints(0, 0, 1, 4, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, 1, new Dimension(15, 15), null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        PanelContent.add(spacer2, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(20, 20), null, 0, false));
        FinalStatesJLabel = new JLabel();
        FinalStatesJLabel.setText("");
        PanelContent.add(FinalStatesJLabel, new GridConstraints(5, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        InitialStatesJLabel = new JLabel();
        InitialStatesJLabel.setText("");
        PanelContent.add(InitialStatesJLabel, new GridConstraints(7, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        PanelContent.add(spacer3, new GridConstraints(10, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(20, 20), null, 0, false));
        final Spacer spacer4 = new Spacer();
        PanelContent.add(spacer4, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, 1, new Dimension(10, 10), null, null, 0, false));
        final Spacer spacer5 = new Spacer();
        PanelContent.add(spacer5, new GridConstraints(9, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, 1, new Dimension(10, 10), null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return PanelContent;
    }

}
